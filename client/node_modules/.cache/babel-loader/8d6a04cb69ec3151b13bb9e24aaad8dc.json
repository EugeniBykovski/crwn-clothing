{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk'\n\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer'; // const middlewares = [thunk]\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/home/eugeni/projects/Lecture RS2019 JS/ReactSeniorDev/project/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\n// import thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { fetchCollectionsStart } from './shop/shop.sagas'\n\nimport rootReducer from './root-reducer'\n\n// const middlewares = [thunk]\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(fetchCollectionsStart)\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistStore }\n"]},"metadata":{},"sourceType":"module"}